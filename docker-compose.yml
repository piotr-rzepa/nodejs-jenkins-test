version: "3.9"

services:
  docker-dind:
    image: docker:dind
    privileged: true
    container_name: docker
    ports:
      - "2376:2376"
    volumes:
      - jenkins-data:/var/jenkins_home
      - jenkins-docker-certs:/certs/client
    environment:
      - DOCKER_TLS_CERTDIR=/certs
    command: --storage-driver=overlay2
  
  jenkins:
    build:
      context: .
      dockerfile: jenkins.dockerfile
    image: myjenkins-blueocean:2.319.3-1
    privileged: true
    container_name: jenkins-blueocean
    environment:
      - DOCKER_HOST=tcp://docker:2376
      - DOCKER_CERT_PATH=/certs/client
      - DOCKER_TLS_VERIFY=1
    ports:
      - "8080:${JENKINS_PORT}"
      - "50000:50000"
    volumes:
      - jenkins-data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - jenkins-docker-certs:/certs/client:ro
    
  sonarcube:
    image: sonarqube:community
    container_name: sonarqube
    mem_limit: 4096M
    mem_reservation: 1024M
    depends_on:
      - database
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://database:${POSTGRES_PORT}/${POSTGRES_DATABASE}
      - SONAR_JDBC_USERNAME=${SONARQUBE_USERNAME}
      - SONAR_JDBC_PASSWORD=${SONARQUBE_PASSWORD}
      - SONAR_WEB_PORT=${SONARQUBE_PORT}
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:${SONARQUBE_PORT}"

  database:
    image: postgres:12
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_USERNAME}
    ports:
      - "5432:${POSTGRES_PORT}"
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data


volumes:
  jenkins-data:
  jenkins-docker-certs:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:
